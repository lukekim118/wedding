{"version":3,"sources":["components/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","timerDays","timerHours","timerMinutes","timerSeconds","className","defaultProps","App","interval","useState","setTimerDays","setTimerHours","setTimerMinutes","setTimerSeconds","useEffect","countDownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAEMA,EAAQ,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,UAAUC,EAA0C,EAA1CA,WAAWC,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,aAC9C,OAAO,cAAC,WAAD,CAAUC,UAAU,SAApB,SACH,yBAASA,UAAU,iBAAnB,SACI,yBAASA,UAAU,QAAnB,SACI,sBAAKA,UAAU,QAAf,UACI,oCACI,4BAAIJ,IACJ,4CAEJ,qCACA,oCACI,4BAAIC,IACJ,6CAEJ,qCACA,oCACI,4BAAIC,IACJ,+CAEJ,qCACA,oCACI,4BAAIC,IACJ,qEAOxBJ,EAAMM,aAAa,CACfL,UAAU,GACVC,WAAW,GACXC,aAAa,GACbC,aAAa,IAGFJ,QCkBAO,MAlDf,WACA,IAIIC,EAJJ,EAAiCC,qBAAjC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAmCD,qBAAnC,mBAAOP,EAAP,KAAkBS,EAAlB,KACA,EAAuCF,qBAAvC,mBAAON,EAAP,KAAoBS,EAApB,KACA,EAAuCH,qBAAvC,mBAAOL,EAAP,KAAoBS,EAApB,KA4BE,OAJAC,qBAAU,YAtBK,WACf,IAAMC,EAAgB,IAAIC,KAAK,cAAcC,UAC7CT,EAASU,aAAY,WACnB,IAAMC,GAAM,IAAIH,MAAOC,UAEjBG,EAAWL,EAAgBI,EAE3BE,EAAOC,KAAKC,MAAMH,EAAS,OAC3BI,EAAQF,KAAKC,MAAMH,EAAQ,MAAR,MACnBK,EAAUH,KAAKC,MAAMH,EAAQ,KAAR,KACrBM,EAAUJ,KAAKC,MAAMH,EAAQ,IAAa,KAE7CA,EAAS,EACVO,cAAcnB,EAASoB,UAEvBlB,EAAaW,GACbV,EAAca,GACdZ,EAAgBa,GAChBZ,EAAgBa,OAKlBG,MAIA,qBAAKxB,UAAU,MAAf,SACE,gCACE,mBAAGA,UAAU,IAAb,yBACA,mBAAGA,UAAU,MAAb,wCACA,cAAC,EAAD,CACAJ,UAAWA,EACXC,WAAYA,EACZC,aAAcA,EACdC,aAAcA,UCnCP0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b60188a6.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nconst Clock = ({timerDays,timerHours,timerMinutes,timerSeconds}) => {\r\n    return <Fragment className=\"clocks\">\r\n        <section className=\"timerContainer\">\r\n            <section className=\"timer\">\r\n                <div className=\"clock\">\r\n                    <section>\r\n                        <p>{timerDays}</p>\r\n                        <small>Days</small>\r\n                    </section>\r\n                    <span>:</span>\r\n                    <section>\r\n                        <p>{timerHours}</p>\r\n                        <small>Hours</small>\r\n                    </section>\r\n                    <span>:</span>\r\n                    <section>\r\n                        <p>{timerMinutes}</p>\r\n                        <small>Minutes</small>\r\n                    </section>\r\n                    <span>:</span>\r\n                    <section>\r\n                        <p>{timerSeconds}</p>\r\n                        <small>Seconds to GO!!!!!!</small>\r\n                    </section>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    </Fragment>\r\n}\r\nClock.defaultProps={\r\n    timerDays:10,\r\n    timerHours:10,\r\n    timerMinutes:10,\r\n    timerSeconds:10,\r\n}\r\n\r\nexport default Clock;\r\n\r\n\r\n\r\n","import './App.css';\nimport Clock from './components/Clock';\nimport React, { useEffect,useState } from 'react';\n// import Pic from './img/bg.JPG'\n\n\nfunction App() {\nconst [timerDays,setTimerDays] = useState()\nconst [timerHours,setTimerHours] = useState()\nconst [timerMinutes,setTimerMinutes] = useState()\nconst [timerSeconds,setTimerSeconds] = useState()\nlet interval;\nconst startTimer=()=>{\n  const countDownDate = new Date(\"May 1,2026\").getTime();\n  interval=setInterval(()=>{\n    const now = new Date().getTime();\n\n    const distance = countDownDate - now;\n    \n    const days = Math.floor(distance/(24*60*60*1000))\n    const hours = Math.floor(distance % (24*60*60*1000)/(1000*60*60))\n    const minutes = Math.floor(distance % (60*60*1000)/(1000*60))\n    const seconds = Math.floor(distance %(60*1000)/(1000))\n\n    if(distance<0){\n      clearInterval(interval.current);\n    } else {\n      setTimerDays(days)\n      setTimerHours(hours)\n      setTimerMinutes(minutes)\n      setTimerSeconds(seconds)\n    }\n  })\n}\n  useEffect(()=>{\n    startTimer();\n  });\n\n  return (\n    <div className=\"App\">\n      <div>\n        <p className=\"p\">Luke & Jane</p>\n        <p className=\"wed\">May 1, 2026 - NEW YORK, NY</p>\n        <Clock \n        timerDays={timerDays}\n        timerHours={timerHours}\n        timerMinutes={timerMinutes}\n        timerSeconds={timerSeconds}\n        />\n        {/* <img src={require('./img/bg.JPG').default} width ={600} height={400}></img> */}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}